{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\MEARN PROJECT\\\\BookStore\\\\src\\\\Components\\\\Auth.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Import statements...\n\nconst Auth = ({\n  register\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [userData, setUserData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const isRegisterForm = register ? true : false;\n  const [isAdmin, setIsAdmin] = useState(false); // State to track admin status\n\n  // ... existing functions ...\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = userData;\n    try {\n      const result = await loginAPI(userData);\n      if (result.status === 200) {\n        const user = result.data.existingUser;\n        const isAdminUser = user.isAdmin || user.email === \"admin@gmail.com\" && user.password === \"admin123\";\n        if (isAdminUser) {\n          navigate('/adminhome');\n        } else {\n          sessionStorage.setItem(\"existingUser\", JSON.stringify(user));\n          sessionStorage.setItem(\"token\", result.data.token);\n          setUserData({\n            email: \"\",\n            password: \"\"\n          });\n\n          // Set the isAdmin state based on the user data\n          setIsAdmin(user.isAdmin);\n          navigate('/');\n          window.location.reload();\n        }\n      } else {\n        toast.warning(result.response.data);\n        console.log(result);\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      toast.error('Login failed. Please try again.');\n    }\n  };\n\n  // Determine whether to render the Header component based on admin status\n  const renderHeader = () => {\n    if (!isAdmin) {\n      return /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 14\n      }, this);\n    }\n    return null; // Don't render the Header component for admins\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: renderHeader()\n  }, void 0, false);\n};\n_s(Auth, \"rfk7PSWJGO74sbxZ/fCjHgE3xC8=\", true);\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["Auth","register","_s","navigate","useNavigate","userData","setUserData","useState","username","email","password","isRegisterForm","isAdmin","setIsAdmin","handleLogin","e","preventDefault","result","loginAPI","status","user","data","existingUser","isAdminUser","sessionStorage","setItem","JSON","stringify","token","window","location","reload","toast","warning","response","console","log","error","renderHeader","_jsxDEV","Header","fileName","_jsxFileName","lineNumber","columnNumber","_Fragment","children","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/MEARN PROJECT/BookStore/src/Components/Auth.jsx"],"sourcesContent":["// Import statements...\r\n\r\nconst Auth = ({ register }) => {\r\n  const navigate = useNavigate();\r\n  const [userData, setUserData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const isRegisterForm = register ? true : false;\r\n  const [isAdmin, setIsAdmin] = useState(false); // State to track admin status\r\n\r\n  // ... existing functions ...\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = userData;\r\n\r\n    try {\r\n      const result = await loginAPI(userData);\r\n\r\n      if (result.status === 200) {\r\n        const user = result.data.existingUser;\r\n        const isAdminUser = user.isAdmin || (user.email === \"admin@gmail.com\" && user.password === \"admin123\");\r\n\r\n        if (isAdminUser) {\r\n          navigate('/adminhome');\r\n        } else {\r\n          sessionStorage.setItem(\"existingUser\", JSON.stringify(user));\r\n          sessionStorage.setItem(\"token\", result.data.token);\r\n          setUserData({\r\n            email: \"\",\r\n            password: \"\",\r\n          });\r\n\r\n          // Set the isAdmin state based on the user data\r\n          setIsAdmin(user.isAdmin);\r\n\r\n          navigate('/');\r\n          window.location.reload();\r\n        }\r\n      } else {\r\n        toast.warning(result.response.data);\r\n        console.log(result);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      toast.error('Login failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Determine whether to render the Header component based on admin status\r\n  const renderHeader = () => {\r\n    if (!isAdmin) {\r\n      return <Header />;\r\n    }\r\n\r\n    return null; // Don't render the Header component for admins\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {renderHeader()}\r\n      {/* ... your existing JSX */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"mappings":";;;;AAAA;;AAEA,MAAMA,IAAI,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGC,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC;IACvCC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAMC,cAAc,GAAGV,QAAQ,GAAG,IAAI,GAAG,KAAK;EAC9C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/C;;EAEA,MAAMO,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAM;MAAEP,KAAK;MAAEC;IAAS,CAAC,GAAGL,QAAQ;IAEpC,IAAI;MACF,MAAMY,MAAM,GAAG,MAAMC,QAAQ,CAACb,QAAQ,CAAC;MAEvC,IAAIY,MAAM,CAACE,MAAM,KAAK,GAAG,EAAE;QACzB,MAAMC,IAAI,GAAGH,MAAM,CAACI,IAAI,CAACC,YAAY;QACrC,MAAMC,WAAW,GAAGH,IAAI,CAACR,OAAO,IAAKQ,IAAI,CAACX,KAAK,KAAK,iBAAiB,IAAIW,IAAI,CAACV,QAAQ,KAAK,UAAW;QAEtG,IAAIa,WAAW,EAAE;UACfpB,QAAQ,CAAC,YAAY,CAAC;QACxB,CAAC,MAAM;UACLqB,cAAc,CAACC,OAAO,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,CAAC;UAC5DI,cAAc,CAACC,OAAO,CAAC,OAAO,EAAER,MAAM,CAACI,IAAI,CAACO,KAAK,CAAC;UAClDtB,WAAW,CAAC;YACVG,KAAK,EAAE,EAAE;YACTC,QAAQ,EAAE;UACZ,CAAC,CAAC;;UAEF;UACAG,UAAU,CAACO,IAAI,CAACR,OAAO,CAAC;UAExBT,QAAQ,CAAC,GAAG,CAAC;UACb0B,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;QAC1B;MACF,CAAC,MAAM;QACLC,KAAK,CAACC,OAAO,CAAChB,MAAM,CAACiB,QAAQ,CAACb,IAAI,CAAC;QACnCc,OAAO,CAACC,GAAG,CAACnB,MAAM,CAAC;MACrB;IACF,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CL,KAAK,CAACK,KAAK,CAAC,iCAAiC,CAAC;IAChD;EACF,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAAC1B,OAAO,EAAE;MACZ,oBAAO2B,OAAA,CAACC,MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACnB;IAEA,OAAO,IAAI,CAAC,CAAC;EACf,CAAC;;EAED,oBACEL,OAAA,CAAAM,SAAA;IAAAC,QAAA,EACGR,YAAY,CAAC;EAAC,gBAEf,CAAC;AAEP,CAAC;AAACpC,EAAA,CAhEIF,IAAI;AAAA+C,EAAA,GAAJ/C,IAAI;AAkEV,eAAeA,IAAI;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}