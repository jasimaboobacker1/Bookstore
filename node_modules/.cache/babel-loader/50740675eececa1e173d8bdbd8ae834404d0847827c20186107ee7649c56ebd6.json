{"ast":null,"code":"const orders = require('../Models/Orderscema');\n\n// addorder\nconst addorder = async (req, res) => {\n  try {\n    const {\n      Bookname,\n      Price,\n      name,\n      mobileNumber,\n      pincode,\n      address\n    } = req.body;\n\n    // Validate required fields\n    if (!Bookname || !Price || !name || !mobileNumber || !pincode || !address) {\n      return res.status(400).json({\n        success: false,\n        message: 'Missing required fields'\n      });\n    }\n\n    // Add order\n    const newOrder = new orders({\n      Bookname,\n      Price,\n      name,\n      mobileNumber,\n      pincode,\n      address\n    });\n    await newOrder.save();\n    res.status(200).json({\n      success: true,\n      message: 'Order placed successfully',\n      order: newOrder\n    });\n  } catch (err) {\n    console.error('Error in addorder:', err);\n    res.status(500).json({\n      success: false,\n      message: 'Error placing order',\n      error: err.message\n    });\n  }\n};\n\n// getallorders\nconst getallorders = async (req, res) => {\n  try {\n    const allorders = await orders.find();\n    res.status(200).json(allorders);\n  } catch (err) {\n    console.error('Error fetching all orders:', err);\n    res.status(500).json({\n      error: 'Internal Server Error'\n    });\n  }\n};\n\n// deletorder\nconst deletorder = async (req, res) => {\n  const {\n    orderid\n  } = req.body;\n  try {\n    await orders.findByIdAndDelete({\n      _id: orderid\n    });\n    res.status(200).json(\"Deleted\");\n  } catch (err) {\n    res.status(401).json(`Error!!! Transaction failed: ${err}`);\n  }\n};\nmodule.exports = {\n  addorder,\n  getallorders,\n  deletorder\n};","map":{"version":3,"names":["orders","require","addorder","req","res","Bookname","Price","name","mobileNumber","pincode","address","body","status","json","success","message","newOrder","save","order","err","console","error","getallorders","allorders","find","deletorder","orderid","findByIdAndDelete","_id","module","exports"],"sources":["C:/Users/DELL/OneDrive/Desktop/Bookstore/Bookstore/src/Admin/Orders.jsx"],"sourcesContent":["const orders = require('../Models/Orderscema');\r\n\r\n// addorder\r\nconst addorder = async (req, res) => {\r\n  try {\r\n    const { Bookname, Price, name, mobileNumber, pincode, address } = req.body;\r\n\r\n    // Validate required fields\r\n    if (!Bookname || !Price || !name || !mobileNumber || !pincode || !address) {\r\n      return res.status(400).json({ success: false, message: 'Missing required fields' });\r\n    }\r\n\r\n    // Add order\r\n    const newOrder = new orders({\r\n      Bookname,\r\n      Price,\r\n      name,\r\n      mobileNumber,\r\n      pincode,\r\n      address,\r\n    });\r\n\r\n    await newOrder.save();\r\n\r\n    res.status(200).json({ success: true, message: 'Order placed successfully', order: newOrder });\r\n  } catch (err) {\r\n    console.error('Error in addorder:', err);\r\n\r\n    res.status(500).json({ success: false, message: 'Error placing order', error: err.message });\r\n  }\r\n};\r\n\r\n// getallorders\r\nconst getallorders = async (req, res) => {\r\n  try {\r\n    const allorders = await orders.find();\r\n    res.status(200).json(allorders);\r\n  } catch (err) {\r\n    console.error('Error fetching all orders:', err);\r\n    res.status(500).json({ error: 'Internal Server Error' });\r\n  }\r\n};\r\n\r\n// deletorder\r\nconst deletorder = async (req, res) => {\r\n  const { orderid } = req.body;\r\n  try {\r\n    await orders.findByIdAndDelete({ _id: orderid });\r\n    res.status(200).json(\"Deleted\");\r\n  } catch (err) {\r\n    res.status(401).json(`Error!!! Transaction failed: ${err}`);\r\n  }\r\n};\r\n\r\nmodule.exports = { addorder, getallorders, deletorder };\r\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,sBAAsB,CAAC;;AAE9C;AACA,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,KAAK;EACnC,IAAI;IACF,MAAM;MAAEC,QAAQ;MAAEC,KAAK;MAAEC,IAAI;MAAEC,YAAY;MAAEC,OAAO;MAAEC;IAAQ,CAAC,GAAGP,GAAG,CAACQ,IAAI;;IAE1E;IACA,IAAI,CAACN,QAAQ,IAAI,CAACC,KAAK,IAAI,CAACC,IAAI,IAAI,CAACC,YAAY,IAAI,CAACC,OAAO,IAAI,CAACC,OAAO,EAAE;MACzE,OAAON,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAA0B,CAAC,CAAC;IACrF;;IAEA;IACA,MAAMC,QAAQ,GAAG,IAAIhB,MAAM,CAAC;MAC1BK,QAAQ;MACRC,KAAK;MACLC,IAAI;MACJC,YAAY;MACZC,OAAO;MACPC;IACF,CAAC,CAAC;IAEF,MAAMM,QAAQ,CAACC,IAAI,CAAC,CAAC;IAErBb,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE,IAAI;MAAEC,OAAO,EAAE,2BAA2B;MAAEG,KAAK,EAAEF;IAAS,CAAC,CAAC;EAChG,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,GAAG,CAAC;IAExCf,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE,qBAAqB;MAAEM,KAAK,EAAEF,GAAG,CAACJ;IAAQ,CAAC,CAAC;EAC9F;AACF,CAAC;;AAED;AACA,MAAMO,YAAY,GAAG,MAAAA,CAAOnB,GAAG,EAAEC,GAAG,KAAK;EACvC,IAAI;IACF,MAAMmB,SAAS,GAAG,MAAMvB,MAAM,CAACwB,IAAI,CAAC,CAAC;IACrCpB,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACU,SAAS,CAAC;EACjC,CAAC,CAAC,OAAOJ,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;IAChDf,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEQ,KAAK,EAAE;IAAwB,CAAC,CAAC;EAC1D;AACF,CAAC;;AAED;AACA,MAAMI,UAAU,GAAG,MAAAA,CAAOtB,GAAG,EAAEC,GAAG,KAAK;EACrC,MAAM;IAAEsB;EAAQ,CAAC,GAAGvB,GAAG,CAACQ,IAAI;EAC5B,IAAI;IACF,MAAMX,MAAM,CAAC2B,iBAAiB,CAAC;MAAEC,GAAG,EAAEF;IAAQ,CAAC,CAAC;IAChDtB,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,SAAS,CAAC;EACjC,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZf,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAE,gCAA+BM,GAAI,EAAC,CAAC;EAC7D;AACF,CAAC;AAEDU,MAAM,CAACC,OAAO,GAAG;EAAE5B,QAAQ;EAAEoB,YAAY;EAAEG;AAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}